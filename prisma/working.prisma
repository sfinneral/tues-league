datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id    String @id @default(cuid())
    email String @unique

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    firstName String
    lastName  String
    password  Password?
    notes     Note[]
    Team      Team?     @relation(fields: [teamId], references: [id])
    teamId    String?
}

model Password {
    hash String

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String @unique
}

model Note {
    id    String @id @default(cuid())
    title String
    body  String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String
}

model Course {
    id      String   @id @default(cuid())
    slug    String   @unique
    name    String
    leagues League[]
}

model League {
    id        String     @id @default(cuid())
    name      String
    startDate DateTime
    slug      String     @unique
    courseId  String
    course    Course     @relation(fields: [courseId], references: [id])
    divisions Division[]
    schedule  Schedule[]
}

model Division {
    id         String   @id @default(cuid())
    name       String
    teams      Team[]
    leagueId   String
    league     League   @relation(fields: [leagueId], references: [id])
    schedule   Schedule @relation(fields: [scheduleId], references: [id])
    scheduleId String   @unique
}

model Team {
    id      String  @id @default(cuid())
    users   User[]
    matches Match[]
    scores  Score[]

    division   Division @relation(fields: [divisionId], references: [id])
    divisionId String
}

model Match {
    id     String   @id @default(cuid())
    date   DateTime
    scores Score[]
    teams  Team[]
    Week   Week?    @relation(fields: [weekId], references: [id])
    weekId String?
}

model Score {
    id    String @id @default(cuid())
    score Int

    teamId  String
    team    Team   @relation(fields: [teamId], references: [id])
    matchId String
    match   Match  @relation(fields: [matchId], references: [id])
}

model Schedule {
    id       String    @id @default(cuid())
    weeks    Week[]
    division Division?

    league   League @relation(fields: [leagueId], references: [id])
    leagueId String
}

model Week {
    id           String    @id @default(cuid())
    wasCancelled Boolean   @default(false)
    date         DateTime
    matches      Match[]
    Schedule     Schedule? @relation(fields: [scheduleId], references: [id])
    scheduleId   String?
}
